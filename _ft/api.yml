openapi: 3.0.0
info:
  title: Concept Search API
  description: A microservice that provides endpoints to query for UPP V2 Concepts
  version: 0.0.1
  license:
    name: MIT
  contact:
    name: Universal Publishing
    email: universal.publishing@ft.com

security:
  - ApiKeyAuth: []

paths:
  /concepts:
    get:
      summary: Concept Query
      description: Get all Concepts by type or search for concepts using a query.
      tags:
        - Public API
      parameters:
        - name: type
          in: query
          description: >
            The type of Concept to search for as a URI. When used without a
            mode, only a single value for type can be used. The results will be
            the first 50 concepts of that type - this is only useful for small
            collections such as Genres. When used in combination with other
            modes such as `mode=search`, this will restrict queries to search
            for concepts by the given type. Multiple types can be specified in
            the request.
          required: true
          example: http://www.ft.com/ontology/person/Person
          explode: true
          schema:
            type: array
            items:
              type: string
              minimum: 1
              uniqueItems: true
              enum:
                - http://www.ft.com/ontology/Genre
                - http://www.ft.com/ontology/product/Brand
                - http://www.ft.com/ontology/person/Person
                - http://www.ft.com/ontology/organisation/Organisation
                - http://www.ft.com/ontology/Location
                - http://www.ft.com/ontology/Topic
                - http://www.ft.com/ontology/AlphavilleSeries
                - http://www.ft.com/ontology/company/PublicCompany
        - name: q
          in: query
          description: The query text to use to find concepts. Must be set if the `mode` is
            set.
          required: false
          example: Fred
          schema:
            type: string
        - name: mode
          in: query
          description: >
            The mode for the search request. Currently only supports a value
            'search' which provides an intuitive search experience. If mode is
            set, then a value for `q` is required.
          required: false
          schema:
            type: string
            enum:
              - search
          example: search
        - name: boost
          in: query
          description: >
            The boost to apply to the request. Currently only supports boosting
            by FT Author, which requires a query
            `type=http://www.ft.com/ontology/person/Person`, `mode=search` and a
            value for `q`.
          required: false
          schema:
            type: string
            enum:
              - authors
        - name: ids
          in: query
          description: >
            returns concepts by id (i.e. a valid uuid). This is the only
            parameter required for this type of query.
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
              minimum: 1
              uniqueItems: true
        - name: include_deprecated
          in: query
          required: false
          description: Include the deprecated concepts too.
          schema:
            type: boolean
      responses:
        "200":
          description: Returns concepts based on the provided query parameters.
          content:
            application/json:
              examples:
                response:
                  value:
                    concepts:
                      - id: http://www.ft.com/thing/61d707b5-6fab-3541-b017-49b72de80772
                        apiUrl: http://api.ft.com/things/61d707b5-6fab-3541-b017-49b72de80772
                        prefLabel: Analysis
                        type: http://www.ft.com/ontology/Genre
        "400":
          description: Incorrect request parameters or invalid concept type.
        "500":
          description: Failed to search for concepts, usually caused by issues with ES.
  /concept/search:
    post:
      summary: Concept Search by Terms
      description: Search for Concepts using ES query terms.
      tags:
        - Public API
      parameters:
        - name: include_score
          in: query
          required: false
          description: Include the ES scores for each item in the response.
          schema:
            type: boolean
          default: false
        - name: include_deprecated
          in: query
          required: false
          description: Include the deprecated concepts too.
          schema:
            type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                term:
                  type: string
              required:
                - term
              example:
                term: donald trump
        description: The concept search term to query for.
        required: true
      responses:
        "200":
          description: Returns concepts based on the provided query parameters.
          content:
            "*/*":
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        apiUrl:
                          type: string
                        prefLabel:
                          type: string
                        types:
                          nullable: true
                          type: array
                          items: {}
                        items:
                          type: string
                        directType:
                          type: string
                required:
                  - results
                example:
                  results:
                    - id: http://api.ft.com/things/61d707b5-6fab-3541-b017-49b72de80772
                      apiUrl: http://api.ft.com/things/61d707b5-6fab-3541-b017-49b72de80772
                      prefLabel: Analysis
        "400":
          description: Incorrect request body.
        "404":
          description: Incorrect request parameters or invalid concept type.
        "500":
          description: Failed to search for concepts, usually caused by issues with ES.
  /__health:
    servers:
      - url: https://upp-prod-delivery-glb.upp.ft.com/__concept-search-api/
      - url: https://upp-staging-delivery-glb.upp.ft.com/__concept-search-api/
    get:
      summary: Healthchecks
      description: Runs application healthchecks and returns FT Healthcheck style json.
      security:
        - BasicAuth: []
      tags:
        - Health
      responses:
        "200":
          description: >
            Should always return 200 along with the output of the healthchecks -
            regardless of whether the healthchecks failed or not. Please inspect
            the overall ok property to see whether or not the application is
            healthy.
          content:
            application/json:
              examples:
                response:
                  value:
                    checks:
                      - businessImpact: No Business Impact.
                        checkOutput: OK
                        lastUpdated: 2017-01-16T10:26:47.222805121Z
                        name: ExampleHealthcheck
                        ok: true
                        panicGuide: https://dewey.ft.com/some-app.html
                        severity: 1
                        technicalSummary: Some engaging technical summary
                    description: A concise description.
                    name: app-name
                    ok: true
                    schemaVersion: 1
  /__health-details:
    servers:
      - url: https://upp-prod-delivery-glb.upp.ft.com/__concept-search-api/
      - url: https://upp-staging-delivery-glb.upp.ft.com/__concept-search-api/
    get:
      summary: Healthcheck Details
      description: Returns healthcheck data for the external ES cluster.
      security:
        - BasicAuth: []
      tags:
        - Health
      responses:
        "200":
          description: Returns ES style status information.
          content:
            application/json:
              examples:
                response:
                  value:
                    cluster_name: a-cluster-name
                    status: green
                    timed_out: false
                    number_of_nodes: 6
                    number_of_data_nodes: 3
                    active_primary_shards: 16
                    active_shards: 32
                    relocating_shards: 0
                    initializing_shards: 0
                    unassigned_shards: 0
                    delayed_unassigned_shards: 0
                    number_of_pending_tasks: 0
                    number_of_in_flight_fetch: 0
                    task_max_waiting_in_queue_millis: 0
                    active_shards_percent_as_number: 100
                    validation_failures: null
                    indices: null
  /__build-info:
    servers:
      - url: https://upp-prod-delivery-glb.upp.ft.com/__concept-search-api/
      - url: https://upp-staging-delivery-glb.upp.ft.com/__concept-search-api/
    get:
      summary: Build Information
      description: >
        Returns application build info, such as the git repository and revision,
        the golang version it was built with, and the app release version.
      security:
        - BasicAuth: []
      tags:
        - Info
      responses:
        "200":
          description: Outputs build information as described in the summary.
          content:
            application/json; charset=UTF-8:
              examples:
                response:
                  value:
                    version: 0.0.1
                    repository: https://github.com/Financial-Times/concept-search-api.git
                    revision: 7cdbdb18b4a518eef3ebb1b545fc124612f9d7cd
                    builder: go version go1.6.3 linux/amd64
                    dateTime: "20161123122615"
  /__gtg:
    servers:
      - url: https://upp-prod-delivery-glb.upp.ft.com/__concept-search-api/
      - url: https://upp-staging-delivery-glb.upp.ft.com/__concept-search-api/
    get:
      summary: Good To Go
      description: Lightly healthchecks the application, and returns a 200 if it's
        Good-To-Go.
      security:
        - BasicAuth: []
      tags:
        - Health
      responses:
        "200":
          description: The application is healthy enough to perform all its functions
            correctly - i.e. good to go.
          content:
            text/plain; charset=US-ASCII:
              examples:
                response:
                  value: OK
        "503":
          description: >
            One or more of the applications healthchecks have failed, so please
            do not use the app. See the /__health endpoint for more detailed
            information.
  /__api:
    servers:
      - url: https://upp-prod-delivery-glb.upp.ft.com/__concept-search-api/
      - url: https://upp-staging-delivery-glb.upp.ft.com/__concept-search-api/
    get:
      summary: API Documentation
      description: Returns OpenAPI documentation for the application.
      security:
        - BasicAuth: []
      tags:
        - Info
      responses:
        "200":
          description: Returns OpenAPI information.
          content:
            text/plain;charset=utf-8:
              schema:
                type: string

servers:
  - url: https://api.ft.com/
  - url: https://api-t.ft.com/

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key
    BasicAuth:
      type: http
      scheme: basic
