checkout:
  post:
    - mkdir -p $HOME/.go_project/src/github.com/$CIRCLE_PROJECT_USERNAME
    - ln -fs $HOME/$CIRCLE_PROJECT_REPONAME $HOME/.go_project/src/github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}

dependencies:
  pre:
    - go get -u github.com/kardianos/govendor
  override:
    - cd $HOME/.go_project/src/github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}
    - govendor sync
    - go get -t -d -v ./...
    - go build -v

test:
  pre:
    - go get -u github.com/jstemmer/go-junit-report
    - go get -u github.com/mattn/goveralls
  override:
    - mkdir -p $CIRCLE_TEST_REPORTS/golang
    - govendor test -race -v +local | go-junit-report > $CIRCLE_TEST_REPORTS/golang/junit.xml
    - govendor test -v -cover -race -coverprofile +local=$CIRCLE_ARTIFACTS/coverage.out ./...
    - cd $CIRCLE_ARTIFACTS && sed -i '1d' *.out
    - |
      echo "mode: atomic" > $CIRCLE_ARTIFACTS/overall-coverage.result
    - cd $CIRCLE_ARTIFACTS && cat *.out >> overall-coverage.result
  post:
    - goveralls -coverprofile=$CIRCLE_ARTIFACTS/overall-coverage.result -service=circle-ci -repotoken=$COVERALLS_TOKEN
    